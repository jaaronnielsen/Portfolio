@inject Portfolio.BlazorWasm.ProjectApiService projectApi
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager uriHelper

@using Portfolio.shared

<h3>Add a project</h3>
<div class="form-group">
    <textarea @bind="newProjectName" placeholder="Title" class="form-control" rows="2" />
</div>
<div class="form-group">
    <textarea @bind="newRequirements" placeholder="Requirments" class="form-control" rows="2" />
</div>
<div class="form-group">
    <textarea @bind="newDesign" placeholder="Design" class="form-control" rows="3" />
</div>
<div>
    <textarea @bind="newCompletedDate" placeholder="Date Completed" class="form-control" rows="2" />
</div>
@if (isAdmin)
{
    <div>
        <button class="btn-warning" @onclick="addProject">Add Project</button>
    </div>
}

<hr />

@code {
    bool isAdmin;
    private string newProjectName;
    private string newRequirements;
    private string newDesign;
    private DateTime newCompletedDate;

    private async Task addProject()
    {
        var project = new Project
        {
            Title = newProjectName,
            Requirements = newRequirements,
            Design = newDesign,
            CompletedDate = newCompletedDate
        };
        await projectApi.AddProjectAsync(project);

    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        var roles = from c in authState.User.Claims
                    where c.Type == "https://schemas.dev-ztkpmk50.com/roles"
                    select c.Value;
        isAdmin = roles.Any(r => r.Contains("Admin"));
    }
}
